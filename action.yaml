name: 'Composite Discord Webhooks'
description: "A composite Github Action for sending messages through Discord's Webhooks"
author: MineBartekSA

branding:
  icon: 'message-square'
  color: 'orange'

inputs:
  webhook:
    description: 'Webhook URL'
    required: true
  content:
    description: 'Message content'
    required: false
    default: ''
  username:
    description: 'Message author username'
    required: false
    default: ''
  avatar_url:
    description: 'Message author avatar'
    required: false
    default: ''
  tts:
    description: 'Message TTS flag'
    required: false
    default: 'false'
  allowed_mentions:
    description: 'Comma-separated list of allowed mention types'
    required: false
    default: ''
  allowed_user_mentions:
    description: 'Comma-separated list of user id, that are allowed to be mentioned'
    required: false
    default: ''
  allowed_role_mentions:
    description: 'Comma-separated list of role id, that are allowed to be mentioned'
    required: false
    default: ''
  embed:
    description: 'JSON or YAML string of the embed object or array'
    required: false
    default: ''
  component:
    description: 'JSON or YAML string of the component object or array'
    required: false
    default: ''
  attachment:
    description: 'JSON or YAML string of the attachment object or array with aditional file field indicating the path to the file'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: 'Prepare'
      shell: bash
      run: echo "DATA={" > $GITHUB_ENV
    - name: 'Handle username'
      if: inputs.username != ''
      shell: bash
      env:
        USERNAME: ${{ inputs.username }}
      run: echo "DATA=$DATA\"username\":\"$USERNAME\"," > $GITHUB_ENV
    - name: 'Handle avatar_url'
      if: inputs.avatar_url != ''
      shell: bash
      env:
        AVATAR_URL: ${{ inputs.avatar_url }}
      run: echo "DATA=$DATA\"avatar_url\":\"$(echo $AVATAR_URL)\"," > $GITHUB_ENV
    - name: 'Handle tts'
      if: inputs.tts == 'true'
      shell: bash
      run: echo "DATA=$DATA\"tts\":true," > $GITHUB_ENV
    - name: 'Handle allowed_mentions'
      if: inputs.allowed_mentions != '' || inputs.allowed_user_mentions != '' || inputs.allowed_role_mentions != ''
      shell: bash
      env:
        ALLOWED_MENTIONS: ${{ inputs.allowed_mentions }}
        ALLOWED_USERS: ${{ inputs.allowed_user_mentions }}
        ALLOWED_ROLES: ${{ inputs.allowed_role_mentions }}
      run: |
        function split {
          TMP="\"$1\":["
          for allow in ${2//,/ }
          do
            TMP="$TMP\"$allow\","
          done
          if [ "${TMP: -1}" != "[" ]
          then
            TMP="${TMP::-1}"
          fi
          echo "$TMP]"
        }
        TMP="{"
        [ "$ALLOWED_MENTIONS" != "" ] && TMP="$TMP$(split "parse" "$ALLOWED_MENTIONS"),"
        [ "$ALLOWED_USERS" != "" ] && TMP="$TMP$(split "users" "$ALLOWED_USERS"),"
        [ "$ALLOWED_ROLES" != "" ] && TMP="$TMP$(split "roles" "$ALLOWED_ROLES"),"
        [ "$TMP" == "{" ] && TMP="{}" || TMP="${TMP:0:-1}}"
        echo "DATA=$DATA\"allowed_mentions\":$TMP," > $GITHUB_ENV
    - name: 'Handle embed'
      if: inputs.embed != ''
      shell: bash
      env:
        EMBED: ${{ inputs.embed }}
      run: |
        EMBED=$(ruby $GITHUB_ACTION_PATH/utils.ru handleJson "$EMBED")
        echo "DATA=$DATA\"embeds\":$EMBED," > $GITHUB_ENV
    - name: 'Handle component'
      if: inputs.component != ''
      shell: bash
      env:
        COMPONENT: ${{ inputs.component }}
      run: |
        COMPONENT=$(ruby $GITHUB_ACTION_PATH/utils.ru handleJson "$COMPONENT" comp)
        echo "DATA=$DATA\"components\":$COMPONENT," > $GITHUB_ENV
    - name: 'Handle attachment'
      if: inputs.attachment != ''
      shell: bash
      env:
        ATTACHMENT: ${{ inputs.attachment }}
      run: |
        IFS=$'\n' FILE_DATA=( $(ruby $GITHUB_ACTION_PATH/utils.ru handleJson "$ATTACHMENT" file) )
        echo "DATA=$DATA\"attachments\":${FILE_DATA[0]}," > $GITHUB_ENV
        echo "FORM=${FILE_DATA[1]}" >> $GITHUB_ENV
    - name: 'Send webhook message'
      shell: bash
      env:
        CONTENT: ${{ inputs.content }}
      run: |
        DATA="$DATA\"content\":\"$(ruby $GITHUB_ACTION_PATH/utils.ru literalNewline "$CONTENT")\"}"
        TMP=$(mktemp)
        OUT=$(curl -w "%{stderr}HTTP/%{http_version} %{http_code}\n" \
          -F payload_json="$DATA" \
          $FORM \
          ${{ inputs.webhook }} 2> $TMP)
        cat $TMP
        if [[ "$(tail -n 1 $TMP | cut -d" " -f2)" != 2* ]]
        then
          echo "::error title=Faild to send message::Discord did not respond with expected status."
          echo "## Discord Error" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ERR=$(ruby $GITHUB_ACTION_PATH/utils.ru prettyJson "$OUT")
          echo "$ERR"
          echo "$ERR" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          exit 22
        fi
